const web3utils = require('./web3.js');

describe('test', () => {
    it('deploy', async () => {
        
        /*
        {
          "alpha_g1":"(17852767873561159599209236125683795018966032071233371417985565189253411755543, 18603560433620198276905541018676510600361867071688422142957802985909402114678)",
          "beta_g2":"(QuadExtField(14682792820850747369274274885815944825334365279746994887055606238878126818503 + 12827242188975609963867000982206759073654058456854052842073189219862921149418 * u), 
                      QuadExtField(2250601776434886220521788691164173831184636456245826555352730355794597732619 + 15114456619012186208296446221439145113606654707051504464212239125819153756467 * u))",
          "delta_g2":"(QuadExtField(3372322653688257194666679142394873463026903596474181259888396577135142190213 + 2074491869282874910765221771430551070610491372002681480020769283635750417928 * u), 
                      QuadExtField(9264204512568480050868949832444942803229482065693867528273105097211854752980 + 8750668686869499511777706404090995560388619651905266755325139009467395207381 * u))",
          "gamma_abc_g1_0":"(21026995478701907804785064744978024566867057457688454831493531734751264095203, 15829721228471753455665584514925107616258669625903265595663233200200956692113)",
          "gamma_g2":"(QuadExtField(13991078162092815852219766503846546145226840524346959297017257208223993035777 + 18296925376494882690861967276018964596250846647379420958029921905938614464712 * u), 
                      QuadExtField(8917687106192036115108582305409435674795394078601978684838983534707192406580 + 6008722555708230164078989080645999092172620550911847055621235999122417645012 * u))"
        }
        */

        // upload vk to contract
        await web3utils.deploy(
          [
            '17852767873561159599209236125683795018966032071233371417985565189253411755543',
            '18603560433620198276905541018676510600361867071688422142957802985909402114678',
            '12827242188975609963867000982206759073654058456854052842073189219862921149418',
            '14682792820850747369274274885815944825334365279746994887055606238878126818503',
            '15114456619012186208296446221439145113606654707051504464212239125819153756467',
            '2250601776434886220521788691164173831184636456245826555352730355794597732619',
            '2074491869282874910765221771430551070610491372002681480020769283635750417928',
            '3372322653688257194666679142394873463026903596474181259888396577135142190213',
            '8750668686869499511777706404090995560388619651905266755325139009467395207381',
            '9264204512568480050868949832444942803229482065693867528273105097211854752980',
            '21026995478701907804785064744978024566867057457688454831493531734751264095203',
            '15829721228471753455665584514925107616258669625903265595663233200200956692113',
            '18296925376494882690861967276018964596250846647379420958029921905938614464712',
            '13991078162092815852219766503846546145226840524346959297017257208223993035777',
            '6008722555708230164078989080645999092172620550911847055621235999122417645012',
            '8917687106192036115108582305409435674795394078601978684838983534707192406580'
          ]
        );
    })

    it("test get all commitments", async () => {
      await web3utils.getAllCommitments();
    })

    it('test verify', async () => {
        await web3utils.callTestVerify(
          [
            '6816668668471313958680220385113037009641901823102651163685570559919019490725',
            '1131039061874675590710543084181265209942821547121516082072521432203807876563',
            '20393434777734534547218523097352950693432481147431325454569228375368188889385',
            '18923502102815370332038117295256288894838255107062633327497215808602393434219',
            '6913496952139244325206462266731875553306122508449684038575883536326677476092',
            '5980613170227552652541605199321292075630351299478181872173703747035757452236',
            '17085529532819901834253789668097208014416635738668156160001174291922441366213',
            '14883290790166787111813184662095919626191481138017164522650272398982155087976',
            '10628878187431463915727069740849968982158399433099915408354856955180891242172',
            '21766210813743405297781664988936493153785402332235992748419207315858943955631'
          ]
        );
    }) 

    it('test verify', async () => {
      await web3utils.callTestVerify(
        [
          '6816668668471313958680220385113037009641901823102651163685570559919019490725',
          '1131039061874675590710543084181265209942821547121516082072521432203807876563',
          '20393434777734534547218523097352950693432481147431325454569228375368188889385',
          '18923502102815370332038117295256288894838255107062633327497215808602393434219',
          '6913496952139244325206462266731875553306122508449684038575883536326677476092',
          '5980613170227552652541605199321292075630351299478181872173703747035757452236',
          '17085529532819901834253789668097208014416635738668156160001174291922441366213',
          '14883290790166787111813184662095919626191481138017164522650272398982155087976',
          '10628878187431463915727069740849968982158399433099915408354856955180891242172',
          '21766210813743405297781664988936493153785402332235992748419207315858943955631'
        ]
      );
  }) 
    
    it("test get vk", async () => {
        await web3utils.getVk();
    })

    it("test get all commitments", async () => {
        await web3utils.getAllCommitments();
    })

    it("test get commitment cnt", async () => {
        await web3utils.getCommitmentCnt();
    })
})

/*==== TEST ====*/

/*
[
  1, 
  2,
  11559732032986387107991004021392285783925812861821192530917403151452391805634,
  10857046999023057135944570762232829481370756359578518086990519993285655852781,
  4082367875863433681332203403145435568316851327593401208105741076214120093531,
  8495653923123431417604973247489272438418190587263600148770280649306958101930,
  11559732032986387107991004021392285783925812861821192530917403151452391805634,
  10857046999023057135944570762232829481370756359578518086990519993285655852781,
  4082367875863433681332203403145435568316851327593401208105741076214120093531,
  8495653923123431417604973247489272438418190587263600148770280649306958101930,
  1, 
  2,
  11559732032986387107991004021392285783925812861821192530917403151452391805634,
  10857046999023057135944570762232829481370756359578518086990519993285655852781,
  4082367875863433681332203403145435568316851327593401208105741076214120093531,
  8495653923123431417604973247489272438418190587263600148770280649306958101930
]
*/

/*
[
  1, 
  2,
  11559732032986387107991004021392285783925812861821192530917403151452391805634,
  10857046999023057135944570762232829481370756359578518086990519993285655852781,
  4082367875863433681332203403145435568316851327593401208105741076214120093531,
  8495653923123431417604973247489272438418190587263600148770280649306958101930,
  1, 
  2,
  1, 
  2
]
 */


/* ====== REAL ======= */
/* vk
[
  17852767873561159599209236125683795018966032071233371417985565189253411755543,
  18603560433620198276905541018676510600361867071688422142957802985909402114678,

  12827242188975609963867000982206759073654058456854052842073189219862921149418,
  14682792820850747369274274885815944825334365279746994887055606238878126818503,
  15114456619012186208296446221439145113606654707051504464212239125819153756467,
  2250601776434886220521788691164173831184636456245826555352730355794597732619,

  2074491869282874910765221771430551070610491372002681480020769283635750417928,
  3372322653688257194666679142394873463026903596474181259888396577135142190213,
  8750668686869499511777706404090995560388619651905266755325139009467395207381,
  9264204512568480050868949832444942803229482065693867528273105097211854752980,

  21026995478701907804785064744978024566867057457688454831493531734751264095203,
  15829721228471753455665584514925107616258669625903265595663233200200956692113,

  18296925376494882690861967276018964596250846647379420958029921905938614464712,
  13991078162092815852219766503846546145226840524346959297017257208223993035777,
  6008722555708230164078989080645999092172620550911847055621235999122417645012,
  8917687106192036115108582305409435674795394078601978684838983534707192406580
]
 */

/* proof
[
  6816668668471313958680220385113037009641901823102651163685570559919019490725,
  1131039061874675590710543084181265209942821547121516082072521432203807876563,
  20393434777734534547218523097352950693432481147431325454569228375368188889385,
  18923502102815370332038117295256288894838255107062633327497215808602393434219,
  6913496952139244325206462266731875553306122508449684038575883536326677476092,
  5980613170227552652541605199321292075630351299478181872173703747035757452236,
  17085529532819901834253789668097208014416635738668156160001174291922441366213,
  14883290790166787111813184662095919626191481138017164522650272398982155087976,
  10628878187431463915727069740849968982158399433099915408354856955180891242172,
  21766210813743405297781664988936493153785402332235992748419207315858943955631
]
*/